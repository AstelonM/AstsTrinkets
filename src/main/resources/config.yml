# Allows whoever equips it to become invisible from players. Cannot be repaired or enchanted, and probably shouldn't be
# used in crafting.
# The invisibility is bypassed by the "aststrinkets.trinket.seeinvisible" permission.
invisibilityTunic:
  enabled: true

# The same as the invisibility tunic, except it has 10 durability left. Added just to have a less op version to give to
# players if you feel full durability is too much.
fragileInvisibilityTunic:
  enabled: true

# Note that this item's invisibility cannot be bypassed. It has to be unequipped to be able to see that player again.
# If you don't want that, it's better to either disable it or make sure it doesn't get to people who shouldn't have it.
# This trinket requires "aststrinkets.op" permission to give.
trueInvisibilityTunic:
  enabled: true

# An item that turns into another when not observed. Pretty safe to give around, the items it turns into aren't
# particularly dangerous.
# These items are forbidden from being used by default: items obtainable through commands only, unbreakable items,
# items that spawn entities (spawn eggs, infested blocks, minecarts etc.), buckets and totems of undying.
shapeShifter:
  enabled: true
  # This list allows you to add more items to the blacklist.
  # You can find them here https://jd.papermc.io/paper/1.18.2/org/bukkit/Material.html (or at the page corresponding to
  # the version you use).
  itemBlacklist: []

# A cake that gives a random effect of 30 seconds duration when a piece is eaten.
# This trinket requires "aststrinkets.op" permission to give.
mysteryCake:
  enabled: true
  # By default, the plugin checks the hunger of the player when determining if the cake is going to be eaten or not.
  # Set this to true if your server uses a plugin that makes food heal directly instead of through hunger.
  checkHealth: false
  # Set to true if you want the plugin to ignore other plugins stopping the player from eating from a cake.
  ignoreBlockRestrictions: false
  # Set this to true if you have a plugin that deals with cake eating instead of using vanilla behaviour.
  # Note that if you have plugins preventing players from eating cakes, this will probably result in the random effects being given
  # without the cake actually being consumed.
  useLowestPriorityListener: false
  # Set this to true if you want the plugin to also consume the cakes when an effect is given.
  # This will replace vanilla behaviour, so the cake won't be consumed naturally. If "useLowestPriorityListener" is also set
  # to true, this should also stop other plugins from affecting cake eating.
  consumeCakeEnabled: false

# The organ a spider uses to spin webs. Keep it in offhand while placing string, to place cobwebs instead.
spinneret:
  enabled: true

# Shift right click in your inventory while holding this item on any damaged item to bring it back to full durability.
# One time use.
mendingPowder:
  enabled: true

# Shift right click in your inventory while holding this item on other trinkets to bind them to you. This makes you the
# owner of that trinket, and no one else will be able to use it. Has no effect on the Shapeshifter or the Binding Powder
# itself. One time use.
bindingPowder:
  enabled: true

# Works the same way as the Binding Powder, except it removes the owner, if there's one. For obvious reasons, this
# requires "aststrinkets.op" permission to give.
unbindingPowder:
  enabled: true

# The wearer can see players who wear invisibility tunics. Cannot be repaired or enchanted, and probably shouldn't be
# used in crafting.
trueSightCap:
  enabled: true

# Inspired by an idea of Homen06. It removes mending from another item and becomes a Homendingdirt.
homendirt:
  enabled: true

# Inspired by an idea of Homen06. It applies mending to another item and is consumed after.
homendingdirt:
  enabled: true

# Right click an entity that has a baby form (and that isn't already a baby) to turn it into a baby.
youthMilk:
  enabled: true
  # Whether only the owner of a pet can turn it into a baby. Bypassed with aststrinkets.trinket.ignorepetowner.
  petOwnerOnly: true

# Right click a mob to trap it within the diamond. Able to trap any mob excluding withers and ender dragons.
diamondTrap:
  enabled: true
  # Whether only the owner of a pet can trap it. Bypassed with aststrinkets.trinket.ignorepetowner.
  petOwnerOnly: true

# Right click an animal to trap it within the emerald. Able to trap any animal, even the aggressive ones, but not
# undead animals.
emeraldTrap:
  enabled: true
  # Whether only the owner of a pet can trap it. Bypassed with aststrinkets.trinket.ignorepetowner.
  petOwnerOnly: true

# Right click a monster to trap it within the amethyst. Able to trap any monster excluding those with implied or obvious
# sentience (eg. illagers, endermen) and boss monsters (wither, ender dragon).
amethystTrap:
  enabled: true
  # Whether only the owner of a pet can trap it. Bypassed with aststrinkets.trinket.ignorepetowner.
  petOwnerOnly: true

# Right click a mob to trap it within the nether star. Able to trap any mob apart from the ender dragons. Unlike the
# others, it is not destroyed when the trapped creature is released.
netherStarTrap:
  enabled: true
  # Whether only the owner of a pet can trap it. Bypassed with aststrinkets.trinket.ignorepetowner.
  petOwnerOnly: true

# Shift right click in your inventory on a block to turn this trinket into an infinite source of that block for placing.
# Basically creative mode, but only for a single block.
# Players with permission aststrinkets.trinket.unboundinfinityitem are able to use this trinket on any block.
infinityItem:
  enabled: true
  # List of blocks you can add can be found here https://jd.papermc.io/paper/1.18.2/org/bukkit/Material.html
  # The trinket can only be used on the blocks specified here.
  allowedBlocks: [DIRT, STONE, COBBLESTONE, OAK_LOG, BIRCH_LOG, SPRUCE_LOG, JUNGLE_LOG, ACACIA_LOG, DARK_OAK_LOG,
                  CRIMSON_STEM, WARPED_STEM, DEEPSLATE, COBBLED_DEEPSLATE]

# A firework rocket that can be used to boost an elytra multiple times. On failure, the rocket is consumed. On critical
# failure, the rocket is consumed and an explosion equal in strength to 2 TNT is detonated at the player's location.
# The explosion can break blocks and set fire to them.
reignitableRocketPrototype:
  enabled: true
  # Percentage of uses that result in the rocket being consumed.
  failureChance: 33.33
  # Percentage of uses that result in the rocket exploding.
  criticalFailureChance: 1.0
  # An experimental setting that triggers a second explosion without a specific cause, which doesn't damage blocks or set
  # fire to them. Set this to true if you have something that stops players from taking damage from the original explosion,
  # and you want them to take damage as intended.
  # Warning: it can have some undesired side effects to nearby entities that are supposed to be protected from damage.
  pluginExplosion: false
  # Set to false to prevent the trinket from being used as a regular firework rocket.
  allowUseAsFirework: false

# Works the same as the prototype, except it no longer causes explosions. On failure, it is simply consumed.
reignitableRocket:
  enabled: true
  # Percentage of uses that result in the rocket being consumed.
  failureChance: 10.0
  # Set to false to prevent the trinket from being used as a regular firework rocket.
  allowUseAsFirework: false

# A firework rocket that can be reused to boost an elytra. It has no chance of failure.
# It needs "aststrinkets.op" permission to give.
perfectedReignitableRocket:
  enabled: true
  # Set to false to prevent the trinket from being used as a regular firework rocket.
  allowUseAsFirework: false

# An arrow that will kill anything it manages to damage. If the arrow has no owner, it will work even if shot by a mob.
# If it has one though, it will only work if it is shot directly by the owner.
deathArrow:
  enabled: true
  # Whether the arrows can pierce if shot from a crossbow with Piercing enchantment.
  piercingAllowed: false
  # Whether the extra arrows created by the Multishot enchantment are also counted as trinkets.
  # Note: does not apply to arrows shot while in creative mode.
  multishotAllowed: false
  # Whether arrows shot by a dispenser count as trinkets. Only works with unowned trinkets.
  dispenserAllowed: true

# Like the True Tunic of Invisibility, this is what I would call a completely unbalanced trinket you want to really
# take care with. Once it's shot and it hits something with health, whatever it hit will die. The only way to stop the
# arrow from killing something is by stopping the collision altogether, and not the damage as plugins usually do.
# It does follow the same rules as the Arrow of Death, if it has an owner, only the owner can use it directly, otherwise
# any entity can use it.
# Obviously it requires the "aststrinkets.op" permission to give.
trueDeathArrow:
  enabled: true
  # Whether the arrows can pierce if shot from a crossbow with Piercing enchantment.
  piercingAllowed: false
  # Whether the extra arrows created by the Multishot enchantment are also counted as trinkets.
  # Note: does not apply to arrows shot while in creative mode.
  multishotAllowed: false
  # Whether arrows shot by a dispenser count as trinkets. Only works with unowned trinkets.
  dispenserAllowed: true

# An ender chest that lets you contain a shulker box "inside". This in turn allows you to put it in another shulker box.
# Does not work if the box has another containment unit inside. Contain a shulker box by using shift right click inside
# the inventory while holding the unit on cursor. Retrieve the box by either placing the unit or right clicking air while
# sneaking with the unit in either hand. One use only.
shulkerBoxContainmentUnit:
  enabled: true

# A helmet that prevents you from drowning when equipped. Does not prevent suffocation (when you are inside blocks).
# Entities can use it too.
divingHelmet:
  enabled: true

# Boots that prevent fall damage when equipped. Entities can use them too.
hydraulicBoots:
  enabled: true

# Right click a creature with it to make it invulnerable to most forms of damage. Can still be damaged by players in creative
# mode.
# This trinket requires "aststrinkets.op" permission to give.
lifeWater:
  enabled: true
  # Whether only the owner of a pet can make it invulnerable. Bypassed with aststrinkets.trinket.ignorepetowner.
  petOwnerOnly: false

# A netherite sword that has a chance to "eat" a random enchantment of the equipment (armour + hands) of those it hits.
# It does so by lowering the level of the enchantment by 1, or by removing it if it would reach 0 or less.
# Only triggered if the hit has at least 90% of the cooldown passed.
souleater:
  enabled: true
  # The minimum time between two uses, in seconds.
  cooldown: 60
  # The chance that the Souleater will consume one of the enchants of those it strikes.
  useChance: 1.0

# A random creature hatches from this egg when thrown.
mysteryEgg:
  enabled: true
  # These mobs should not spawn from the eggs.
  # A complete list of options can be found here: https://jd.papermc.io/paper/1.18.2/org/bukkit/entity/EntityType.html
  blacklist: [WITHER, ENDER_DRAGON]
  # Whether eggs shot by a dispenser count as trinkets. Only works with unowned trinkets.
  dispenserAllowed: true

# Hold in the other hand while fishing to reduce the time it takes to lure fish.
bait:
  enabled: true
  # Percentage reduced from the waiting time. Combined with lure 3, 50% makes fish appear immediately.
  efficiency: 50.0
  # The chance that the bait will be consumed on use.
  consumeChance: 10.0

# Right click air while sneaking to transfer your experience to this bottle and turn it into a Bottle o' Enchanting.
# Throw that bottle to gain back your experience.
experienceBottle:
  enabled: true
  # Whether bottles shot by a dispenser count as trinkets. Only works with unowned trinkets.
  dispenserAllowed: true

# An unbreakable iron axe that cuts trees logs and wood instantly but deals half the damage of a regular iron axe.
# Really loves to cut trees. If owned by a player, she doesn't enjoy being separated from them, nor does she appreciate
# being handled by strangers.
# Inspired by Lucy the Axe from Don't Starve Together.
# Requires the "aststrinkets.op" permission to give.
sentientAxe:
  enabled: true

# A book in which you write commands to be run when interacting with the world. Supports any command available in the Paper
# server, along with a set of tokens you can use to change how they are executed. For more info, check its usage.
# To use a written spellbook, press right click while sneaking.
# This trinket requires "aststrinkets.op" to give.
# This trinket also requires "aststrinkets.trinket.createspellbook" (also added with "aststrinkets.op") to create one.
# Without it, players are limited to only using already written spellbooks, and cannot write their own.
spellbook:
  enabled: true

# A respawn anchor that can be linked to your location when shift right click air, and then placed somewhere to create an
# end gateway leading to that location.
# Because the gateway cannot be removed by regular players, this trinket requires the "aststrinkets.op" permission to give.
gatewayAnchor:
  enabled: true

# A thick potion which can be used on a block of amethyst with shift right click while holding it on the cursor inside the
# inventory to turn it into a budding amethyst.
buddingSolution:
  enabled: true

# An iron ingot that makes all dropped items in the given radius teleport to the player. It also causes drops from mined
# blocks to be added to the player's inventory, if there's space.
itemMagnet:
  enabled: true
  # The distance in blocks in any direction from the player that items are attracted from. High values might affect performance.
  range: 4

# A glass block that can trap any creature inside, and can then be placed to create a spawner that spawns creatures of the
# type of the one trapped. The creature inside can also be released by shift right clicking a block, like with a trap.
# This trinket requires the "aststrinkets.op" permission to give.
terrarium:
  enabled: true
  # Whether the ender dragon can be trapped in a terrarium.
  allowEnderDragonCapture: false
  # Whether only the owner of a pet can trap it. Bypassed with aststrinkets.trinket.ignorepetowner.
  petOwnerOnly: true

# An arrow that summons a lightning bolt wherever it lands.
smitingArrow:
  enabled: true
  # Whether the arrows can pierce if shot from a crossbow with Piercing enchantment.
  piercingAllowed: true
  # Whether the extra arrows created by the Multishot enchantment are also counted as trinkets.
  # Note: does not apply to arrows shot while in creative mode.
  multishotAllowed: true
  # Whether arrows shot by a dispenser count as trinkets. Only works with unowned trinkets.
  dispenserAllowed: true

# An arrow that creates an explosion wherever it lands.
explosiveArrow:
  enabled: true
  # Whether the arrows can pierce if shot from a crossbow with Piercing enchantment.
  piercingAllowed: true
  # Whether the extra arrows created by the Multishot enchantment are also counted as trinkets.
  # Note: does not apply to arrows shot while in creative mode.
  multishotAllowed: true
  # Whether arrows shot by a dispenser count as trinkets. Only works with unowned trinkets.
  dispenserAllowed: true
  # How strong the explosion is. 4 is equivalent to one tnt.
  explosionPower: 2
  # Whether the explosion will set fire to blocks.
  setFire: false
  # Whether the explosion breaks blocks.
  breakBlocks: false

# Leather tunic that prevents damage from fire. Entities can use it too. Does not prevent damage from direct contact with lava.
fireproofVest:
  enabled: true

# A clock that can be set to a specific location and then used to teleport you back there later. Every item except
# Time Machine Prototypes are dropped at your location.
timeMachinePrototype:
  enabled: true

# A bundle that can hold an effectively limitless amount of a singly item kind.
holdingBundle:
  enabled: true

# A wet sponge that lets you manually mark item stacks and creatures as trinket immune.
trinketImmunitySponge:
  enabled: true

# A sponge that lets you manually remove trinket immunity from item stacks and entities.
trinketVulnerabilitySponge:
  enabled: true

# An enchanted book that increases the level of one random enchantment on an item.
arcaneTome:
  enabled: true

# A netherite ingot that makes all players in the given radius teleport to the player using it.
# Needless to say, it requires the "aststrinkets.op" permission to give.
playerMagnet:
  enabled: true
  # The distance in blocks in any direction from the player that players are attracted from. High values might affect performance.
  range: 4

# A string that can be used on armour (or anything that can be worn in the armour slots) to make it unbreakable.
adamantineStrand:
  enabled: true

# A kelp that can be eaten (shift right click air) or fed to a creature (right click it) to heal back to full health.
healingHerb:
  enabled: true

# A pair of leather pants that make the wearer not take any damage.
# Requires the "aststrinkets.op" permission to give.
invincibilityBelt:
  enabled: true

# A netherite sword that has a chance to absorb some of the damage dealt as health to the wielder.
# Only triggered if the hit has at least 90% of the cooldown passed.
vampiricSword:
  enabled: true
  # The minimum time between two uses, in seconds.
  cooldown: 0
  # The chance that the sword will absorb health.
  useChance: 10.0
  # Percentage of the damage dealt that is converted into health for the wielder.
  percentageAbsorbed: 50.0

# A firework that has random shapes and colours when it explodes.
mysteryFirework:
  enabled: true
  # Equivalent to the number of gunpowder used to create the firework.
  # Minimum value is 1.
  minFlightDuration: 1
  # Maximum value allowed is 127, though it's recommended to not put it too higher than 3.
  maxFlightDuration: 3
  # The minimum and maximum amount of individual effects added to the firework.
  # Minimum value is 1.
  minEffectAmount: 1
  # It's recommended to leave the maximum to 3, as more effects might pass the particle limit and reduce how good the
  # fireworks look.
  maxEffectAmount: 3
  # The minimum and maximum number of colours of the explosion.
  # Minimum value is 1.
  minPrimaryColours: 1
  # Technically, there is no limit to the maximum amount, but for clarity, you probably should keep this low.
  maxPrimaryColours: 3
  # The minimum and maximum number of colours of the fade effect.
  # Minimum value is 0.
  minFadeColours: 0
  # Works just like the maximum of the primary colours.
  maxFadeColours: 3
  # If set to true, the plugin will create randomized colours along with using the primary colours defined through dyes.
  # Note that the resulting colours might not be too appealing.
  allowCustomColours: false

# An unbreakable turtle helmet that makes the wearer not take any damage.
# Requires the "aststrinkets.op" permission to give.
unbreakableTurtleShell:
  enabled: true

# A leather cap that gives the wearer night vision. The night vision is removed when the cap is taken off.
nightVisionGoggles:
  enabled: true

# A firework rocket that creates rain/snow for a random period of time.
cloudSeeder:
  enabled: true
  # Minimum time in seconds that the weather will last. 600 seconds is the equivalent of half a day in Minecraft.
  minWeatherDuration: 600
  # Maximum time in seconds that the weather will last. 1200 seconds is the equivalent of a day in Minecraft.
  maxWeatherDuration: 1200

# A button that selects a random number based on its sides (sets it in its lore) when thrown with the drop key.
die:
  enabled: true
  # The number of sides the die has. Represents the maximum amount that can be obtained by throwing it.
  sides: 6

# A nautilus shell that attempts to teleport the player to a random location in the world. The location will never be inside
# solid blocks or liquids. Only 16 attempts will be made to find a valid location. The shell is always consumed on use.
mysteryShell:
  enabled: true
  # The location will be chosen based on the world's border and the min and max heights of the world instead of the configured
  # values.
  useWorldDefault: true
  # The location will be on the highest solid block at a random location, ignoring y coordinate constraints.
  surfaceOnly: true
  # The minimum value of the x coordinate.
  minX: 0
  # The maximum value of the x coordinate.
  maxX: 0
  # The minimum value of the y coordinate.
  minY: 0
  # The maximum value of the y coordinate.
  maxY: 0
  # The minimum value of the z coordinate.
  minZ: 0
  # The maximum value of the z coordinate.
  maxZ: 0

# A nautilus shell that attempts to teleport the player to a random location in the world, it works the same as the
# Mystery Shell, except it's reusable and gives you nausea and blindness when used.
# Requires the "aststrinkets.op" permission to give.
abyssShell:
  enabled: true
  # The location will be chosen based on the world's border and the min and max heights of the world instead of the configured
  # values.
  useWorldDefault: true
  # The location will be on the highest solid block at a random location, ignoring y coordinate constraints.
  surfaceOnly: true
  # The minimum value of the x coordinate.
  minX: 0
  # The maximum value of the x coordinate.
  maxX: 0
  # The minimum value of the y coordinate.
  minY: 0
  # The maximum value of the y coordinate.
  maxY: 0
  # The minimum value of the z coordinate.
  minZ: 0
  # The maximum value of the z coordinate.
  maxZ: 0

# Right click a piglin, piglin brute or hoglin with it to make it immune to zombification outside the Nether.
surfaceCure:
  enabled: true

# A light gray dye that makes item frames and glow item frames invisible. Use it on placed item frames with the powder
# in your main hand.
invisibilityPowder:
  enabled: true

# An egg that, whenever you close an inventory containing it, it has a chance to spread to other egg stacks in that inventory
# (make them spoiled eggs as well) or destroy itself. Basically eggs infected by a virus.
# Because of how destructive this can be when mishandled, it requires the "aststrinkets.op" permission to give.
spoiledEgg:
  enabled: true
  # The chance that the spoiled egg will spread.
  infectivity: 25.0
  # The minimum amount of item stacks it can spread to. Between 1 and 54 inclusive.
  minSpread: 1
  # The maximum amount of item stacks it can spread to. Between 1 and 54 inclusive.
  maxSpread: 3
  # The chance that the spoiled egg will destroy itself.
  lethality: 10.0

# A mundane potion that transforms up to a whole stack of copper based blocks that can oxidize into their next oxidation step.
copperOxidationSolution:
  enabled: true

# Leather boots that give Dolphin's Grace and Slowness when worn. The effects are removed when they're taken off.
flippers:
  enabled: true

# An enchanted golden apple that can cure zombie Nether creatures like golden apples can cure zombie villagers.
curingApple:
  enabled: true
  # The minimum time in seconds that it takes for the zombie to cure. Defaults to zombie villager value of 180 (3 minutes).
  minDuration: 180
  # The maximum time in seconds that it takes for the zombie to cure. Defaults to zombie villager value of 300 (5 minutes).
  maxDuration: 300
  # Chance that a piglin brute will appear when curing a zombified piglin that spawned directly.
  bruteChance: 0.1

# A paper that lets you instantly build snow golems on a given block while you have the materials in your inventory.
snowGolemBlueprint:
  enabled: true
  # The materials that can be used as heads. Defaults to [PUMPKIN, CARVED_PUMPKIN, JACK_O_LANTERN].
  allowedHeads: [PUMPKIN, CARVED_PUMPKIN, JACK_O_LANTERN]

# A barrel that lets you build a snow golem where it's placed.
snowGolemKit:
  enabled: true

# Right click an invulnerable creature with it to remove its invulnerability.
# This trinket requires "aststrinkets.op" permission to give, for obvious reasons.
taintedLifeWater:
  enabled: true
  # Whether only the owner of a pet can make it vulnerable again. Bypassed with aststrinkets.trinket.ignorepetowner.
  petOwnerOnly: false

# Right click a baby creature to turn it into an adult.
spoiledYouthMilk:
  enabled: true
  # Whether only the owner of a pet can turn it into an adult. Bypassed with aststrinkets.trinket.ignorepetowner.
  petOwnerOnly: true

# Right click an entity that has a baby form to turn it into a baby and prevent it from growing.
eternalYouthCookie:
  enabled: true
  # Whether only the owner of a pet can turn it into a baby. Bypassed with aststrinkets.trinket.ignorepetowner.
  petOwnerOnly: true

# A wheat that can turn cows into red mooshrooms.
infestedWheat:
  enabled: true

# A firework rocket that creates a thunderstorm for a random period of time while it's raining/snowing.
cloudElectrifier:
  enabled: true
  # Minimum time in seconds that the weather will last.
  minWeatherDuration: 180
  # Maximum time in seconds that the weather will last.
  maxWeatherDuration: 780

# A bow that makes mobs killed with it drop extra loot. It works by adding generating loot for the given creature a second time.
huntingBow:
  enabled: true
  # The looting level used for generating the second loot.
  lootingLevel: 3
  # The luck level used for generating the second loot.
  luckLevel: 0

# Leather boots that give Dolphin's Grace when worn. The effects are removed when they're taken off.
advancedFlippers:
  enabled: true

# A stone pickaxe that makes stone and cobblestone drop gravel when mined with it.
rudimentaryRockCrusher:
  enabled: true

# Cocoa beans that instantly tame a creature when fed.
treats:
  enabled: true

# A totem that advances the time to the next day when the player who holds it dies or kills another player. No resurrection
# happens.
# Because it can change the time of the world, this trinket requires "aststrinkets.op" permission to give.
sunTotem:
  enabled: true

# Sweet berries that change the type of a creature to a randomly selected one.
magicBerries:
  enabled: true
  # Whether only the owner of a pet can change its type. Bypassed with aststrinkets.trinket.ignorepetowner.
  petOwnerOnly: true
  # Because the lore of the trinket implies only the appearance is changed, below are options for cases where the behaviour
  # of the creature would change too.
  # Charged creeper explosion is much stronger than regular ones.
  allowCreepers: true
  # The two fox kinds hunt different prey.
  allowFoxes: true
  # The appearance of goats doesn't even change, it's whether they scream that does.
  allowGoats: true
  # Brown mooshrooms produce suspicious stews.
  allowMooshrooms: true
  # Panda behaviour is incompatible with their colour.
  allowPandas: true
  # Killer bunnies are aggressive, unlike regular ones.
  allowKillerBunnies: true
  # Villager trades might end up different depending on type in future versions.
  allowVillagers: true
  # Mostly matters for the villager type they turn into.
  allowZombieVillagers: true
